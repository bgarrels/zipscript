#summary Guide for the impatient.
#labels Featured

If you want to get up and running quickly, this is for you.  After this, you might want to take a look at the UserGuide and DevelopersGuide.

No dependencies are required so it is as simple as include the zipscript jar in your classpath.  There are 3 different ways Zipscript can be used:

==Evaluating static cinfig entries as booleans==
{{{
String expression = "foo != null && bar > 10"; // get the expression to evaluate
Map context = new HashMap();
// add business data to the context
try {
    Evaluator e = ZipEngine.getInstance().getEvaluator(expression);
    boolean val = e.booleanValue(context);
}
catch (ParseException e) {
// the expression was invalid
}
}}}

==Retrieving runtime objects using static config entries==
{{{
String expression = "{foo, bar, baz}"; // get the expression to evaluate - example represents a list
Map context = new HashMap();
// add business data to the context
try {
    Evaluator e = ZipEngine.getInstance().getEvaluator(expression);
    Object obj = e.objectValue(context);
    // in this example obj will be a java.util.List
}
catch (ParseException e) {
// the expression was invalid
}
}}}

==Merging static templates with runtime data==
{{{

String templateName = ... // represents a resource from the classpath by default
Map context = new HashMap();
// add business data to the context
try {
    Template t = ZipEngine.getInstance().getTemplate(templateName);
    // there are other merging options as well
    String result = t.merge(context);
}
catch (ParseException e) {
// the expression was invalid
}
}}}